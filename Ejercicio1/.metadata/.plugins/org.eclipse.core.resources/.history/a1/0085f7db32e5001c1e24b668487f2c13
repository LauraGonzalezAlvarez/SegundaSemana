import java.util.UUID;

/**
 * Esta clase abstracta contiene los valores de un cuerpo celeste (planeta)
 *
 * @author Laura Daniela Gonzalez Alvarez <lhaogonzaleza@gmail.com>
 * @version 1.0.0 2022-06-05
 * @since 1.0.0
  */
public abstract class Planet implements IPlanetActions {
    /*
     * Atributos
     */

    /**
     * Identificador único del planeta
     */
    private UUID ID;
    /**
     * Nombre del planeta
     */
    private String name;
    /**
     * Valor de la masa del planeta
     */
    private double mass;
    /**
     * Valor de la densidad de un planeta
     */
    private double density;
    /**
     * Valor del diámetro de un planeta
     */
    private double diameter;
    /**
     * Valor de la distancia
     */
    private double distance;

    /*
     * Constructor
     */
    public Planet(String name, double mass, double density, double diameter, double distance) {
        this.ID = UUID.randomUUID();
        this.name = name;
        this.mass = mass;
        this.density = density;
        this.diameter = diameter;
        this.distance = distance;
    }

    /*
     * Métodos getters
     */
    public UUID getID() {
        return ID;
    }

    public String getName() {
        return name;
    }

    public double getMass() {
        return mass;
    }

    public double getDensity() {
        return density;
    }

    public double getDiameter() {
        return diameter;
    }

    public double getDistance() {
        return distance;
    }

    /**
     * Calcula la fuerza gravitacional entre dos cuerpos celestes
     *
     * @param planet
     * @param distance
     * @return double Valor de la fuerza gravitacional
     */
    public double gravitationalAttraction(Planet planet, double distance) {
        double gravity = 9.7805;

        double mass1 = this.getMass();
        double mass2 = planet.getMass();
        double force = gravity * ((mass1 * mass2) / (Math.pow(distance, 2)));

        return force;
    }
}