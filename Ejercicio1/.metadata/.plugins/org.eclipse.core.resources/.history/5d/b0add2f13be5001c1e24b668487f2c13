import java.util.Arrays;
import java.util.InputMismatchException;
import java.util.Random;
import java.util.Scanner;

public class RandomMain {

	public static void main(String[] args) {
		String sortMethod = "";
        int arrayLength = 0;
        double numbersArray[];
        float min = -100, max = 100;

        Scanner entry = new Scanner(System.in);
        System.out.println("Digite la cantidad de elementos del arreglo: ");

        /**
         * @exception Genera excepción InputMismatchException al digitar un carácter diferente a entero.
         */
        try {
            arrayLength = entry.nextInt();
        } catch (InputMismatchException e) {
            System.out.println("\u001B[31m " + "[ERROR]" + "\u001B[0m \n" +
                    "Introduce un valor numérico");
        }

        /*
         * Se asigna número de elementos al arreglo.
         */
        numbersArray = new double[arrayLength];

        /*
         * Se recorre el array y se asigna en cada posición un número real aleatorio.
         */
        for (int i = 0; i < arrayLength; i++) {
            Random random = new Random();
            double randomNumber = min + random.nextDouble() * (max - min);
            double roundedNumber = (double) Math.round(randomNumber * 100) / 100;

            numbersArray[i] = roundedNumber;
        }

        /*
         * Imprime arreglo con valores aleatorios
         */
        System.out.println("Arreglo a ordenar: " + Arrays.toString(numbersArray));

        Scanner entry1 = new Scanner(System.in);
        System.out.println("Desea ordenar los números utilizando el método burbuja o quick [b ó q]");
        sortMethod = entry1.nextLine();
        /*
         *Condicional ternario:
         *(condición) ? Si true, haga : Si false, haga
         *(1 > 0 && 10 < 12) ? "Si se cumple" : "No se cumple"
         */
        double[] numbersASC = sortMethod.equalsIgnoreCase("b")
                ? Array.getInstance().bubbleMethodAsc(numbersArray)
                : Array.getInstance().quickSortAsc(numbersArray);
        System.out.println("╔────────────────────────────────────────╗\n" +
                "\uD83E\uDC09 Arreglo ordenado de manera ascendente \uD83E\uDC09 \n" +
                "╚────────────────────────────────────────╝\n" + Arrays.toString(numbersASC));

	}

}
