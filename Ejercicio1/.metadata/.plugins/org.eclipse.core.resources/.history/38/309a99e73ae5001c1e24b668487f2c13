/**
 * Define los métodos que debe implementar una clase de tipo sorter
 * @author Laura Daniel Gonzalez Alvarez <lhaogonzaleza@gmail.com>
 * @version 1.0.0 2022-06-05
 */
public interface ISorter {
	/**
     * Ordena de manera ascendente los elementos del array utilizando el método burbuja
     *
     * @param number
     * @return int
     * @version 1.0.0 2022-04-21
     * @author Gretty Mosquera <gretymosquera@gmail.com>
     * @see 1.0.0
     * @see "Metodo burbuja https://juncotic.com/ordenamiento-de-burbuja-algoritmos-de-ordenamiento/"
     * El código fue tomado del siguiente enlace y fue modificado para este proyecto.
     * @see "https://www.youtube.com/watch?v=hf-_c7DFb3U&t=141s&ab_channel=Programaci%C3%B3nATS"
     */
    public double[] bubbleMethodAsc(double[] number);

    /**
     * Ordena de manera ascendente los elementos del array utilizando el método quicksort
     *
     * @param number
     * @param start
     * @param end
     * @version 1.0.0 2022-04-21
     * @author Gretty Mosquera <gretymosquera@gmail.com>
     * @see 1.0.0
     * @see "Método quicksort https://bit.ly/3MHMe0S"
     * El código fue tomado del siguiente enlace y fue modificado para este proyecto.
     * @see "https://bit.ly/3kxA8eK"
     */
    public void quickSort(double[] number, int start, int end);

    /**
     * Método que ordena un vector de manera ascendente por medio de quicksort.
     * Retorna una copia ordenada del vector recibido.
     * Este método es una fachada para llamar el método quicksort.
     *
     * @param number
     * @return int[]
     * @see ArraySorter#quickSort(double[], int, int)
     * @see "facade https://es.wikipedia.org/wiki/Facade_(patr%C3%B3n_de_dise%C3%B1o)"
     */
    public double[] quickSortAsc(double[] number);
}
